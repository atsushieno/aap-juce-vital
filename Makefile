# path to aap-juce directory.
AAP_JUCE_DIR=$(shell pwd)/external/aap-juce

# path to application repo. The default is the submodule path.
APP_SRC_DIR=$(shell pwd)/external/vital

# base app name
# We avoid naming "Vital" (see vital/README)
APP_NAME=vitaloid

# app build directory name. Usually repo name is good.
# We have some vital-specific trick here...
# We cannot automate update-aap-metadata because `standalone` build does not
# generate the library files that we want. Thus need `plugins` build for it.
# Sadly you cannot build `plugins` without VST2_SDK without changes
ifeq ('$(VITAL_UPDATE_METADATA)', '')
APP_BUILD_DIR=apps/vital/standalone
else
APP_BUILD_DIR=apps/vital/plugin
APP_CUSTOM_JUCER=$(shell pwd)/apps/override.$(APP_NAME)-plugin.jucer
LIBFILES=builds/linux_vst/build/Vial.a
endif
APP_COPY_DIR=apps/vital

# aap_metadata.xml source
AAP_METADATA_XML_SOURCE=$(shell pwd)/apps/vitaloid.aap_metadata.xml

# diff file to app, generated by git diff. "-" if there is no patch.
PATCH_FILE=$(shell pwd)/apps/vital-aap.patch

# diff depth, depending on the nested directory in the source tree, if patch exists.
PATCH_DEPTH=1

# Enable this if it is instrument (and unless you don't want to support MIDI input).
ENABLE_MIDI_DEVICE_SERVICE=1 

# Enable if it should skip metadata generator. Plugins need it, hosts don't.
# SKIP_METADATA_GENERATOR=1

# For update-aap-metadata tasks
ifeq ($(shell uname), 'Darwin')
PLAT_BUILD_DIR=macosx
else
ifeq ($(VITAL_UPDATE_METADATA), '')
PLAT_BUILD_DIR=linux
else
PLAT_BUILD_DIR=linux_vst
endif
endif
BUILDS_DIR=builds
METADATA_GENERATOR_EXTRA_LDFLAGS=-lGL


include $(AAP_JUCE_DIR)/Makefile.common
